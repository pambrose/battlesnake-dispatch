plugins {
  id 'java'
  id 'org.jetbrains.kotlin.jvm' version '1.3.72'
  id 'org.jetbrains.kotlin.plugin.serialization' version '1.3.72'
  id "com.github.ben-manes.versions" version "0.28.0"
}

repositories {
  maven { url "https://kotlin.bintray.com/kotlinx" }
  maven { url = 'https://maven-central.storage-download.googleapis.com/repos/central/data/' }
  jcenter()
}

sourceCompatibility = 1.8

description = 'battlesnake-quickstart'
group = 'io.battlesnake'
version = '0.3.4'

dependencies {
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:${serialization_version}"

  implementation "io.github.microutils:kotlin-logging:${logging_version}"
  implementation "com.sparkjava:spark-core:${spark_version}"
  implementation "org.slf4j:slf4j-simple:${slf4j_version}"

  testImplementation "org.amshove.kluent:kluent:${kluent_version}"
  testImplementation "org.junit.jupiter:junit-jupiter-api:${junit_version}"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junit_version}"
}

task sourcesJar(type: Jar, dependsOn: classes) {
  archiveClassifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives sourcesJar
}

compileKotlin {
  kotlinOptions.jvmTarget = '1.8'
  kotlinOptions.freeCompilerArgs += ['-Xuse-experimental=kotlin.time.ExperimentalTime',
                                     '-Xuse-experimental=kotlinx.serialization.UnstableDefault']
}

compileTestKotlin {
  kotlinOptions.jvmTarget = '1.8'
  kotlinOptions.freeCompilerArgs += ['-Xuse-experimental=kotlin.time.ExperimentalTime',
                                     '-Xuse-experimental=kotlinx.serialization.UnstableDefault']
}

test {
  useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
    exceptionFormat "full"
    showStandardStreams = true
  }
}